/*
████████╗███████╗ ██████╗███╗   ██╗ ██████╗ ██╗      ██████╗  ██████╗ ██╗ █████╗     
╚══██╔══╝██╔════╝██╔════╝████╗  ██║██╔═══██╗██║     ██╔═══██╗██╔════╝ ██║██╔══██╗    
   ██║   █████╗  ██║     ██╔██╗ ██║██║   ██║██║     ██║   ██║██║  ███╗██║███████║    
   ██║   ██╔══╝  ██║     ██║╚██╗██║██║   ██║██║     ██║   ██║██║   ██║██║██╔══██║    
   ██║   ███████╗╚██████╗██║ ╚████║╚██████╔╝███████╗╚██████╔╝╚██████╔╝██║██║  ██║    
   ╚═╝   ╚══════╝ ╚═════╝╚═╝  ╚═══╝ ╚═════╝ ╚══════╝ ╚═════╝  ╚═════╝ ╚═╝╚═╝  ╚═╝    
                                                                                     
██████╗ ███████╗    ██╗██████╗  ██████╗ ███╗   ██╗███╗   ███╗ █████╗ ███╗   ██╗      
██╔══██╗██╔════╝    ██║██╔══██╗██╔═══██╗████╗  ██║████╗ ████║██╔══██╗████╗  ██║      
██║  ██║█████╗      ██║██████╔╝██║   ██║██╔██╗ ██║██╔████╔██║███████║██╔██╗ ██║      
██║  ██║██╔══╝      ██║██╔══██╗██║   ██║██║╚██╗██║██║╚██╔╝██║██╔══██║██║╚██╗██║      
██████╔╝███████╗    ██║██║  ██║╚██████╔╝██║ ╚████║██║ ╚═╝ ██║██║  ██║██║ ╚████║      
╚═════╝ ╚══════╝    ╚═╝╚═╝  ╚═╝ ╚═════╝ ╚═╝  ╚═══╝╚═╝     ╚═╝╚═╝  ╚═╝╚═╝  ╚═══╝    
BY: Juan David Alfonso 
*/                                                                        

////////TECNOLOGIA DE IRONMAN --- CODE//////////

// Inclusion de las bibliotecas necesarias
#include <ESP8266WiFi.h>  ////library esp8266
//#include <WiFi.h>  // Biblioteca para ESP32  (DESCOMENTAR SI SE USA CHIP ESP32)
#include <Wire.h>
#include <Adafruit_GFX.h>        // Biblioteca para la pantalla OLED
#include <Adafruit_SSD1306.h>                                                                                     ///////////////////

#include <Adafruit_NeoPixel.h>
#ifdef __AVR__
#include <avr/power.h> // Required for 16 MHz Adafruit Trinket
#endif

// Which pin on the Arduino is connected to the NeoPixels?
// On a Trinket or Gemma we suggest changing this to 1:
#define LED_PIN    12

// How many NeoPixels are attached to the Arduino?
#define LED_COUNT 23

// Declare our NeoPixel strip object:

#define SCREEN_WIDTH 128 // OLED display width, in pixels
#define SCREEN_HEIGHT 64 // OLED display height, in pixels
#define OLED_RESET     -1 // Reset pin # (or -1 if sharing Arduino reset pin)
#define SCREEN_ADDRESS 0x3C ///< See datasheet for Address

#define LOGO_HEIGHT   60    // OLED LOGO height, in pixels
#define LOGO_WIDTH    120  // OLED LOGO width, in pixels
#define LOGO_HEIGHT2   50            ///
#define LOGO_WIDTH2    120          ///


// Inicializacion de la pantalla OLED
Adafruit_SSD1306 display(SCREEN_WIDTH, SCREEN_HEIGHT, &Wire, OLED_RESET);
Adafruit_NeoPixel strip(LED_COUNT, LED_PIN, NEO_GRB + NEO_KHZ800);



// Hexadecimales de las imagenes mostradas en la pantalla OLED
const unsigned char PROGMEM logoiron [] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x03, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x08, 0x0e, 0x70, 0x18, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x7e, 0x18, 0x0b, 0xd8, 0x62, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xbb, 
	0x10, 0x14, 0x28, 0xbe, 0x28, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xa1, 0x45, 0x14, 
	0x10, 0x21, 0x60, 0x28, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x62, 0x02, 0x14, 0x10, 
	0x21, 0x40, 0x38, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x16, 0x52, 0x02, 0x94, 0x16, 0x69, 
	0x4a, 0x78, 0x50, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x19, 0xd1, 0x47, 0x97, 0x89, 0x91, 0xba, 
	0x50, 0x90, 0x00, 0x00, 0x00, 0x00, 0x00, 0x09, 0x8a, 0x79, 0x3d, 0x1f, 0x87, 0xe0, 0xc6, 0x51, 
	0x70, 0x07, 0x80, 0x00, 0x00, 0x00, 0x1e, 0x0b, 0x88, 0xc6, 0x00, 0x00, 0x00, 0x7c, 0x52, 0x78, 
	0x04, 0xc0, 0x00, 0x00, 0x03, 0x14, 0x06, 0x48, 0x38, 0x00, 0x00, 0x00, 0x00, 0x26, 0x18, 0x0b, 
	0xa0, 0x00, 0x00, 0x0c, 0x94, 0x05, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xf8, 0x0a, 0x50, 
	0x00, 0x00, 0x17, 0x1e, 0x25, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x28, 0x14, 0x51, 0xc0, 
	0x00, 0x1f, 0x8b, 0xd0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0xd1, 0x70, 0x03, 
	0x0a, 0x06, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2f, 0xa2, 0xd0, 0x0d, 0x85, 
	0x81, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x65, 0xb0, 0x11, 0x07, 0xc0, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x8c, 0xc0, 0x0e, 0x82, 0x30, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0b, 0x80, 0x03, 0x41, 0xc0, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x16, 0x00, 0x01, 0xe0, 0x00, 0x00, 0x01, 0xff, 
	0xff, 0xff, 0xff, 0xe7, 0xc0, 0x00, 0x00, 0x1d, 0x80, 0x00, 0xa0, 0x00, 0x00, 0x01, 0x0c, 0x00, 
	0xe0, 0x06, 0x1c, 0x40, 0x00, 0x00, 0x03, 0x00, 0x00, 0x40, 0x00, 0x00, 0x03, 0x0c, 0x38, 0xe3, 
	0x86, 0x0c, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x1c, 0x78, 0xe3, 0xc7, 
	0x06, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x18, 0x78, 0xe2, 0x47, 0x00, 
	0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x18, 0x00, 0xe2, 0x47, 0x00, 0x10, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x38, 0x00, 0xe2, 0x43, 0x00, 0x18, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x38, 0xc1, 0xe3, 0xc3, 0x8c, 0x08, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x70, 0xe1, 0x60, 0x03, 0x8e, 0x0c, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x71, 0xa1, 0xe0, 0x03, 0x8f, 0x0c, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x1f, 0xff, 0xbf, 0xff, 0xff, 0xfc, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x7e, 0x3f, 0x7f, 0xef, 0xdf, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x42, 0x63, 0x60, 0x6c, 0x79, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x43, 0xc3, 0x40, 0x2c, 0x38, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0xc1, 0x83, 0x46, 0x2c, 0x18, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x81, 0x03, 0xce, 0x34, 0x00, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 
	0x03, 0xce, 0x14, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x80, 0x03, 
	0x80, 0x14, 0x00, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x03, 0x80, 
	0x1c, 0x20, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x08, 0x43, 0x8e, 0x1e, 
	0x30, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x18, 0xc3, 0x9f, 0x0e, 0x38, 
	0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xff, 0xff, 0xf9, 0xff, 0xf7, 0xf0, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xe2, 0x3c, 0xe0, 0x71, 0xe1, 0xe0, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};
const unsigned char PROGMEM iron [] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x03, 0xcc, 0x78, 0xf3, 0x99, 0xbc, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x06, 0x0e, 0x6d, 0x83, 0x9d, 0xb6, 0xd8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 
	0x1f, 0x79, 0xf7, 0xdf, 0xb6, 0x98, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xd3, 
	0x6c, 0xf6, 0xd9, 0xbc, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xde, 
	0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xf8, 0x00, 0x03, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xf8, 0x00, 0x07, 0xff, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x0f, 0xff, 0xf8, 0x00, 0x07, 0xff, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x3f, 0xff, 0xfc, 0x00, 0x07, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x3f, 0xff, 0xfc, 0x00, 0x0f, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x3f, 0xff, 0xfe, 0x00, 0x0f, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 
	0xff, 0xfe, 0x00, 0x1f, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0xff, 
	0xfe, 0x00, 0x1f, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0xff, 0xff, 
	0x00, 0x3f, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0xff, 0xff, 0x00, 
	0x3f, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xfe, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x78, 0x0f, 0xff, 0xff, 0xff, 0xfc, 0x07, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x01, 0xfc, 0x00, 0x7f, 0xff, 0xff, 0xc0, 0x07, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x01, 0xfc, 0x00, 0x07, 0xff, 0xf8, 0x00, 0x07, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0xfe, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 
	0xfc, 0x00, 0xff, 0xc0, 0x07, 0xff, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xff, 
	0xe3, 0xff, 0xf1, 0xff, 0xff, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xfe, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x01, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x1f, 0xff, 0xff, 0xff, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0xc7, 0xc0, 0x00, 0x00, 0xf8, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x38, 0x3f, 0xff, 0xff, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x1e, 0xff, 0xff, 0xff, 0xde, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 
	0xff, 0xff, 0xff, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xff, 
	0xff, 0xff, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xff, 0xc0, 
	0xff, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00
};

const unsigned char PROGMEM SA [] ={
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x7d, 0xff, 0x3f, 0x1f, 0x9f, 0xe1, 0xfc, 0x3e, 0x7b, 0xfd, 0xe7, 0x80, 0x00, 0x00, 0x00, 0xfe, 
	0xff, 0x7f, 0x9f, 0xdf, 0xe1, 0xfe, 0x7f, 0x7f, 0xfd, 0xf7, 0x00, 0x00, 0x00, 0x00, 0xfc, 0xe7, 
	0x7b, 0xbd, 0xdf, 0xe0, 0xef, 0x77, 0xbb, 0xdd, 0xf7, 0x00, 0x00, 0x00, 0x00, 0xf8, 0xff, 0x73, 
	0xf9, 0xc7, 0x00, 0xef, 0xf7, 0xbf, 0xf9, 0xff, 0x00, 0x00, 0x00, 0x00, 0xfe, 0xff, 0x7b, 0xfb, 
	0xc7, 0x80, 0xef, 0xf7, 0xbf, 0xf9, 0xff, 0x00, 0x00, 0x00, 0x00, 0x3e, 0xe7, 0x7b, 0xbd, 0xc7, 
	0x80, 0xee, 0x77, 0x1f, 0xf9, 0xdf, 0x00, 0x00, 0x00, 0x00, 0xfe, 0xff, 0x7f, 0xbd, 0xc7, 0x81, 
	0xee, 0x77, 0x1e, 0xf1, 0xdf, 0x00, 0x00, 0x00, 0x00, 0xfe, 0xff, 0x3f, 0x1f, 0x8f, 0x81, 0xfe, 
	0x7f, 0x1e, 0xf1, 0xcf, 0x00, 0x00, 0x00, 0x00, 0xf0, 0xe7, 0x0c, 0x0e, 0x06, 0x80, 0xf0, 0x1c, 
	0x1c, 0x71, 0xc7, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0x3c, 0xf0, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xbe, 0xf0, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7b, 0xbf, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x73, 0xbf, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7b, 0xbf, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x7b, 0xbb, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x7f, 0xb9, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x3f, 0x3d, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x0c, 0x30, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfc, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xff, 0xc0, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xff, 0xf0, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x78, 0x00, 0x00, 0x00, 0x3f, 0x83, 0xfc, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x03, 0xff, 0x00, 0x00, 0x00, 0x7c, 0xfe, 0x3e, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x0f, 0x03, 0x80, 0x00, 0x01, 0xf1, 0xff, 0x8f, 0x00, 0x00, 0x0f, 0xf0, 0x00, 
	0x00, 0x00, 0x0c, 0x01, 0x80, 0x00, 0x01, 0xe7, 0xff, 0xc7, 0x80, 0x00, 0x3c, 0xf8, 0x00, 0x00, 
	0x00, 0x1c, 0x01, 0x80, 0x00, 0x03, 0xc6, 0x7e, 0x63, 0xc0, 0x00, 0x70, 0x1c, 0x00, 0x00, 0x00, 
	0x36, 0x02, 0xc4, 0x00, 0x07, 0x88, 0x7c, 0x31, 0xc0, 0x00, 0xe0, 0x0c, 0x00, 0x00, 0x00, 0x2d, 
	0xc2, 0x82, 0x00, 0x07, 0x08, 0x7c, 0x10, 0xe0, 0x00, 0xe0, 0x0c, 0x00, 0x00, 0x00, 0x6b, 0x63, 
	0x8a, 0x00, 0x0e, 0x18, 0x3c, 0x30, 0xe0, 0x01, 0xb8, 0x14, 0x20, 0x00, 0x00, 0x52, 0x27, 0x05, 
	0x00, 0x0e, 0x10, 0x3c, 0x10, 0x70, 0x01, 0x4e, 0x1c, 0x50, 0x00, 0x00, 0x54, 0x3f, 0x95, 0x00, 
	0x1e, 0x14, 0x00, 0x18, 0x70, 0x03, 0x53, 0x2c, 0x50, 0x00, 0x00, 0x40, 0x30, 0xc7, 0x80, 0x1c, 
	0x14, 0x00, 0x38, 0x70, 0x02, 0xa1, 0x78, 0x28, 0x00, 0x00, 0x00, 0x20, 0x4f, 0x80, 0x1c, 0x30, 
	0x00, 0x28, 0x38, 0x02, 0x81, 0xdc, 0xac, 0x00, 0x00, 0x00, 0xe8, 0x58, 0xc0, 0x1c, 0x30, 0x00, 
	0x0c, 0x38, 0x00, 0x01, 0x86, 0x3c, 0x00, 0x00, 0x0f, 0xee, 0x70, 0xc0, 0x1c, 0x34, 0x00, 0x28, 
	0x38, 0x01, 0x01, 0x02, 0x6c, 0x00, 0x00, 0x1d, 0xf2, 0xc0, 0x80, 0x1c, 0x27, 0x00, 0xe8, 0x38, 
	0x00, 0x1f, 0x43, 0xc6, 0x00, 0x00, 0x3a, 0x1f, 0x80, 0x80, 0x1c, 0x30, 0xdb, 0x08, 0x38, 0x00, 
	0x7b, 0xf6, 0x04, 0x00, 0x00, 0x30, 0x17, 0x81, 0x80, 0x1c, 0x12, 0x01, 0x18, 0x38, 0x00, 0xef, 
	0x9c, 0x04, 0x00, 0x00, 0x30, 0x21, 0xa3, 0x00, 0x1c, 0x18, 0x00, 0x38, 0x30, 0x01, 0xe0, 0xfc, 
	0x04, 0x00, 0x00, 0x30, 0x60, 0xff, 0x00, 0x1c, 0x1c, 0x00, 0x70, 0x70, 0x01, 0x81, 0x1a, 0x0c, 
	0x00, 0x00, 0x30, 0x40, 0x7c, 0x00, 0x0e, 0x0c, 0x00, 0xa0, 0x70, 0x03, 0x81, 0x0e, 0x98, 0x00, 
	0x00, 0x30, 0x20, 0x00, 0x00, 0x0e, 0x04, 0x80, 0x60, 0xf0, 0x01, 0x83, 0x07, 0xf0, 0x00, 0x00, 
	0x18, 0x3a, 0x00, 0x00, 0x0f, 0x06, 0x81, 0x60, 0xe0, 0x01, 0x82, 0x01, 0xe0, 0x00, 0x00, 0x0e, 
	0x61, 0x00, 0x00, 0x07, 0x06, 0x02, 0x61, 0xe0, 0x00, 0xc1, 0x00, 0x00, 0x00, 0x00, 0x07, 0xf4, 
	0x60, 0x00, 0x03, 0x87, 0x02, 0xc1, 0xc0, 0x00, 0xc1, 0xc0, 0x00, 0x00, 0x00, 0x01, 0xff, 0x80, 
	0x00, 0x03, 0xc3, 0x81, 0x87, 0x80, 0x00, 0x73, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x01, 0xe1, 0x87, 0x8f, 0x80, 0x00, 0x1f, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0xf8, 0xff, 0x1e, 0x00, 0x00, 0x07, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7e, 
	0x7c, 0x7c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xcf, 
	0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xff, 0xe0, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xff, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00
};

const unsigned char PROGMEM SD [] ={ 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x7d, 0xff, 0x3f, 0x1f, 0x9f, 0xe1, 0xfc, 0x3e, 0x7b, 0xfd, 0xe7, 0x80, 0x00, 0x00, 0x00, 0xfe, 
	0xff, 0x7f, 0x9f, 0xdf, 0xe1, 0xfe, 0x7f, 0x7f, 0xfd, 0xf7, 0x00, 0x00, 0x00, 0x00, 0xfc, 0xe7, 
	0x7b, 0xbd, 0xdf, 0xe0, 0xef, 0x77, 0xbb, 0xdd, 0xf7, 0x00, 0x00, 0x00, 0x00, 0xf8, 0xff, 0x73, 
	0xf9, 0xc7, 0x00, 0xef, 0xf7, 0xbf, 0xf9, 0xff, 0x00, 0x00, 0x00, 0x00, 0xfe, 0xff, 0x7b, 0xfb, 
	0xc7, 0x80, 0xef, 0xf7, 0xbf, 0xf9, 0xff, 0x00, 0x00, 0x00, 0x00, 0x3e, 0xe7, 0x7b, 0xbd, 0xc7, 
	0x80, 0xee, 0x77, 0x1f, 0xf9, 0xdf, 0x00, 0x00, 0x00, 0x00, 0xfe, 0xff, 0x7f, 0xbd, 0xc7, 0x81, 
	0xee, 0x77, 0x1e, 0xf1, 0xdf, 0x00, 0x00, 0x00, 0x00, 0xfe, 0xff, 0x3f, 0x1f, 0x8f, 0x81, 0xfe, 
	0x7f, 0x1e, 0xf1, 0xcf, 0x00, 0x00, 0x00, 0x00, 0xf0, 0xe7, 0x0c, 0x0e, 0x06, 0x80, 0xf0, 0x1c, 
	0x1c, 0x71, 0xc7, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfc, 0xff, 0xfc, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfe, 0xff, 0xfc, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xee, 0x7c, 0xec, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xee, 0xf0, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xce, 0xf9, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x01, 0xee, 0x70, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x01, 0xfe, 0xf1, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0xfc, 0xf9, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x30, 0xe9, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7c, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xff, 0xc0, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xff, 0xf0, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x78, 0x00, 0x00, 0x00, 0x3f, 0x83, 0xfc, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x03, 0xff, 0x00, 0x00, 0x00, 0x7c, 0xfe, 0x3e, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x0f, 0x03, 0x80, 0x00, 0x01, 0xf1, 0xff, 0x8f, 0x00, 0x00, 0x0f, 0xf0, 0x00, 
	0x00, 0x00, 0x0c, 0x01, 0x80, 0x00, 0x01, 0xe7, 0xff, 0xc7, 0x80, 0x00, 0x3c, 0xf8, 0x00, 0x00, 
	0x00, 0x1c, 0x01, 0x80, 0x00, 0x03, 0xc6, 0x7e, 0x63, 0xc0, 0x00, 0x70, 0x1c, 0x00, 0x00, 0x00, 
	0x36, 0x02, 0xc4, 0x00, 0x07, 0x88, 0x7c, 0x31, 0xc0, 0x00, 0xe0, 0x0c, 0x00, 0x00, 0x00, 0x2d, 
	0xc2, 0x82, 0x00, 0x07, 0x08, 0x7c, 0x10, 0xe0, 0x00, 0xe0, 0x0c, 0x00, 0x00, 0x00, 0x6b, 0x63, 
	0x8a, 0x00, 0x0e, 0x18, 0x3c, 0x30, 0xe0, 0x01, 0xb8, 0x14, 0x20, 0x00, 0x00, 0x52, 0x27, 0x05, 
	0x00, 0x0e, 0x10, 0x3c, 0x10, 0x70, 0x01, 0x4e, 0x1c, 0x50, 0x00, 0x00, 0x54, 0x3f, 0x95, 0x00, 
	0x1e, 0x14, 0x00, 0x18, 0x70, 0x03, 0x53, 0x2c, 0x50, 0x00, 0x00, 0x40, 0x30, 0xc7, 0x80, 0x1c, 
	0x14, 0x00, 0x38, 0x70, 0x02, 0xa1, 0x78, 0x28, 0x00, 0x00, 0x00, 0x20, 0x4f, 0x80, 0x1c, 0x30, 
	0x00, 0x28, 0x38, 0x02, 0x81, 0xdc, 0xac, 0x00, 0x00, 0x00, 0xe8, 0x58, 0xc0, 0x1c, 0x30, 0x00, 
	0x0c, 0x38, 0x00, 0x01, 0x86, 0x3c, 0x00, 0x00, 0x0f, 0xee, 0x70, 0xc0, 0x1c, 0x34, 0x00, 0x28, 
	0x38, 0x01, 0x01, 0x02, 0x6c, 0x00, 0x00, 0x1d, 0xf2, 0xc0, 0x80, 0x1c, 0x27, 0x00, 0xe8, 0x38, 
	0x00, 0x1f, 0x43, 0xc6, 0x00, 0x00, 0x3a, 0x1f, 0x80, 0x80, 0x1c, 0x30, 0xdb, 0x08, 0x38, 0x00, 
	0x7b, 0xf6, 0x04, 0x00, 0x00, 0x30, 0x17, 0x81, 0x80, 0x1c, 0x12, 0x01, 0x18, 0x38, 0x00, 0xef, 
	0x9c, 0x04, 0x00, 0x00, 0x30, 0x21, 0xa3, 0x00, 0x1c, 0x18, 0x00, 0x38, 0x30, 0x01, 0xe0, 0xfc, 
	0x04, 0x00, 0x00, 0x30, 0x60, 0xff, 0x00, 0x1c, 0x1c, 0x00, 0x70, 0x70, 0x01, 0x81, 0x1a, 0x0c, 
	0x00, 0x00, 0x30, 0x40, 0x7c, 0x00, 0x0e, 0x0c, 0x00, 0xa0, 0x70, 0x03, 0x81, 0x0e, 0x98, 0x00, 
	0x00, 0x30, 0x20, 0x00, 0x00, 0x0e, 0x04, 0x80, 0x60, 0xf0, 0x01, 0x83, 0x07, 0xf0, 0x00, 0x00, 
	0x18, 0x3a, 0x00, 0x00, 0x0f, 0x06, 0x81, 0x60, 0xe0, 0x01, 0x82, 0x01, 0xe0, 0x00, 0x00, 0x0e, 
	0x61, 0x00, 0x00, 0x07, 0x06, 0x02, 0x61, 0xe0, 0x00, 0xc1, 0x00, 0x00, 0x00, 0x00, 0x07, 0xf4, 
	0x60, 0x00, 0x03, 0x87, 0x02, 0xc1, 0xc0, 0x00, 0xc1, 0xc0, 0x00, 0x00, 0x00, 0x01, 0xff, 0x80, 
	0x00, 0x03, 0xc3, 0x81, 0x87, 0x80, 0x00, 0x73, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x01, 0xe1, 0x87, 0x8f, 0x80, 0x00, 0x1f, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0xf8, 0xff, 0x1e, 0x00, 0x00, 0x07, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7e, 
	0x7c, 0x7c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xcf, 
	0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xff, 0xe0, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xff, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00
};

const unsigned char PROGMEM PA [] ={
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 
	0x8f, 0x87, 0x1f, 0x3f, 0x71, 0xe7, 0xef, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xef, 
	0xcf, 0xdf, 0xbf, 0x79, 0xe7, 0xff, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xee, 0xdd, 
	0xdd, 0xbb, 0x71, 0xc3, 0x6e, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xef, 0xdd, 0xdf, 
	0xbc, 0x71, 0xc3, 0x8f, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xcf, 0xdd, 0xdf, 0x3b, 
	0x71, 0xc7, 0xa7, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x0e, 0xdd, 0xdc, 0x3b, 0x7d, 
	0xdb, 0x7e, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x0f, 0xef, 0xde, 0x3f, 0x7f, 0xff, 
	0xef, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x0d, 0x87, 0x1c, 0x3f, 0x6c, 0xe7, 0xad, 
	0xa0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x78, 0xff, 0xfb, 0xff, 0xbf, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7c, 0xff, 0xfb, 0xbf, 0xbf, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7c, 0xcc, 0xe3, 0x9b, 0x3b, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x7d, 0xe0, 0xe3, 0x9f, 0x38, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0xfd, 0xdc, 0xe3, 0x9f, 0x3f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0xee, 0xfc, 0xf3, 0x9e, 0x7f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0xfe, 0x7c, 0xf3, 0xce, 0x7f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfc, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xff, 0xc0, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xff, 0xf0, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0x83, 0xfc, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x07, 0xf0, 0x00, 0x00, 0x00, 0xfc, 0xfe, 0x3e, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x1e, 0xf8, 0x00, 0x00, 0x00, 0xf1, 0xff, 0x8f, 0x00, 0x00, 0x00, 0x0f, 0xe0, 
	0x00, 0x00, 0x70, 0x0c, 0x00, 0x00, 0x01, 0xe7, 0xff, 0xc7, 0x80, 0x00, 0x00, 0x1e, 0xf8, 0x00, 
	0x00, 0x60, 0x0e, 0x00, 0x00, 0x03, 0xc6, 0x7e, 0x63, 0xc0, 0x00, 0x00, 0x30, 0x0e, 0x00, 0x00, 
	0xe0, 0x16, 0x20, 0x00, 0x07, 0x88, 0x7c, 0x31, 0xc0, 0x00, 0x00, 0x70, 0x06, 0x00, 0x01, 0xbc, 
	0x16, 0x00, 0x00, 0x07, 0x08, 0x7c, 0x10, 0xe0, 0x00, 0x04, 0x68, 0x07, 0x00, 0x01, 0x2e, 0x14, 
	0x50, 0x00, 0x0e, 0x18, 0x3c, 0x30, 0xe0, 0x00, 0x00, 0x68, 0x3d, 0x80, 0x01, 0x51, 0x1c, 0x08, 
	0x00, 0x0e, 0x10, 0x3c, 0x10, 0x70, 0x00, 0x0a, 0x28, 0x74, 0x80, 0x02, 0x51, 0xb8, 0x28, 0x00, 
	0x1e, 0x14, 0x00, 0x18, 0x70, 0x00, 0x14, 0x38, 0x8a, 0x80, 0x02, 0x80, 0xfc, 0x5c, 0x00, 0x1c, 
	0x14, 0x00, 0x38, 0x70, 0x00, 0x34, 0x3d, 0x8a, 0x40, 0x02, 0x01, 0x86, 0x5c, 0x00, 0x1c, 0x30, 
	0x00, 0x28, 0x38, 0x00, 0x28, 0x37, 0x01, 0x40, 0x00, 0x01, 0x82, 0x66, 0x00, 0x1c, 0x30, 0x00, 
	0x0c, 0x38, 0x00, 0x3a, 0x61, 0x81, 0x00, 0x00, 0x0f, 0x43, 0xc6, 0x00, 0x1c, 0x34, 0x00, 0x28, 
	0x38, 0x00, 0x6e, 0x41, 0x80, 0x00, 0x00, 0x7f, 0xb3, 0x06, 0x00, 0x1c, 0x27, 0x00, 0xe8, 0x38, 
	0x00, 0x63, 0xc3, 0xe0, 0x00, 0x00, 0xe7, 0xde, 0x06, 0x00, 0x1c, 0x30, 0xdb, 0x08, 0x38, 0x00, 
	0x60, 0xcd, 0xde, 0x00, 0x01, 0xd0, 0x7c, 0x04, 0x00, 0x1c, 0x12, 0x01, 0x18, 0x38, 0x00, 0x60, 
	0x7b, 0xf7, 0x00, 0x01, 0x80, 0x8e, 0x0c, 0x00, 0x1c, 0x18, 0x00, 0x38, 0x30, 0x00, 0x20, 0x3e, 
	0x0b, 0x00, 0x01, 0x81, 0x0d, 0x9c, 0x00, 0x1c, 0x1c, 0x00, 0x70, 0x70, 0x00, 0x30, 0x71, 0x01, 
	0x80, 0x01, 0x81, 0x03, 0xf8, 0x00, 0x0e, 0x0c, 0x00, 0xa0, 0x70, 0x00, 0x39, 0xe0, 0x81, 0x80, 
	0x01, 0x81, 0x01, 0xe0, 0x00, 0x0e, 0x04, 0x80, 0x60, 0xf0, 0x00, 0x1f, 0xc0, 0x81, 0x80, 0x00, 
	0xc1, 0x00, 0x00, 0x00, 0x0f, 0x06, 0x81, 0x60, 0xe0, 0x00, 0x07, 0x00, 0x83, 0x80, 0x00, 0x61, 
	0xe0, 0x00, 0x00, 0x07, 0x06, 0x02, 0x61, 0xe0, 0x00, 0x00, 0x00, 0x83, 0x00, 0x00, 0x39, 0xbc, 
	0x00, 0x00, 0x03, 0x87, 0x02, 0xc1, 0xc0, 0x00, 0x00, 0x0f, 0x86, 0x00, 0x00, 0x1f, 0x03, 0x00, 
	0x00, 0x03, 0xc3, 0x81, 0x87, 0x80, 0x00, 0x00, 0x39, 0x9c, 0x00, 0x00, 0x07, 0xf8, 0x00, 0x00, 
	0x01, 0xe1, 0x87, 0x8f, 0x80, 0x00, 0x00, 0xc0, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0xf8, 0xff, 0x1e, 0x00, 0x00, 0x00, 0x1f, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7e, 
	0x7c, 0x7c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xcf, 
	0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xff, 0xe0, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xff, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00
};

const unsigned char PROGMEM PD [] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 
	0x8f, 0x87, 0x1f, 0x3f, 0x71, 0xe7, 0xef, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xef, 
	0xcf, 0xdf, 0xbf, 0x79, 0xe7, 0xff, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xee, 0xdd, 
	0xdd, 0xbb, 0x71, 0xc3, 0x6e, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xef, 0xdd, 0xdf, 
	0xbc, 0x71, 0xc3, 0x8f, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xcf, 0xdd, 0xdf, 0x3b, 
	0x71, 0xc7, 0xa7, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x0e, 0xdd, 0xdc, 0x3b, 0x7d, 
	0xdb, 0x7e, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x0f, 0xef, 0xde, 0x3f, 0x7f, 0xff, 
	0xef, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x0d, 0x87, 0x1c, 0x3f, 0x6c, 0xe7, 0xad, 
	0xa0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xe7, 0xef, 0xcf, 0x1f, 0xff, 0xff, 0xff, 0xc0, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xf7, 0xff, 0xcf, 0x3f, 0xff, 0xf7, 0xef, 0xc0, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x03, 0x3f, 0x6f, 0x1f, 0x3b, 0x1c, 0x67, 0x6e, 0xc0, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x03, 0xf7, 0x8f, 0x9f, 0xb8, 0x1c, 0x77, 0xcf, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x03, 0xb7, 0x67, 0xdf, 0xbb, 0x1c, 0x63, 0xce, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x07, 0xf7, 0xff, 0xfb, 0xbf, 0xbc, 0xf3, 0xcf, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x07, 0xe7, 0xff, 0xbf, 0x9f, 0x3c, 0xf3, 0xcf, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfc, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xff, 0xc0, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xff, 0xf0, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0x83, 0xfc, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x07, 0xf0, 0x00, 0x00, 0x00, 0x7c, 0xfe, 0x3e, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x1e, 0xf8, 0x00, 0x00, 0x01, 0xf1, 0xff, 0x8f, 0x00, 0x00, 0x00, 0x0f, 0xe0, 
	0x00, 0x00, 0x70, 0x0c, 0x00, 0x00, 0x01, 0xe7, 0xff, 0xc7, 0x80, 0x00, 0x00, 0x1e, 0xf8, 0x00, 
	0x00, 0x60, 0x0e, 0x00, 0x00, 0x03, 0xc6, 0x7e, 0x63, 0xc0, 0x00, 0x00, 0x30, 0x0e, 0x00, 0x00, 
	0xe0, 0x16, 0x20, 0x00, 0x07, 0x88, 0x7c, 0x31, 0xc0, 0x00, 0x00, 0x70, 0x06, 0x00, 0x01, 0xbc, 
	0x16, 0x00, 0x00, 0x07, 0x08, 0x7c, 0x10, 0xe0, 0x00, 0x04, 0x68, 0x07, 0x00, 0x01, 0x2e, 0x14, 
	0x50, 0x00, 0x0e, 0x18, 0x3c, 0x30, 0xe0, 0x00, 0x00, 0x68, 0x3d, 0x80, 0x01, 0x51, 0x1c, 0x08, 
	0x00, 0x0e, 0x10, 0x3c, 0x10, 0x70, 0x00, 0x0a, 0x28, 0x74, 0x80, 0x02, 0x51, 0xb8, 0x28, 0x00, 
	0x1e, 0x14, 0x00, 0x18, 0x70, 0x00, 0x14, 0x38, 0x8a, 0x80, 0x02, 0x80, 0xfc, 0x5c, 0x00, 0x1c, 
	0x14, 0x00, 0x38, 0x70, 0x00, 0x34, 0x3d, 0x8a, 0x40, 0x02, 0x01, 0x86, 0x5c, 0x00, 0x1c, 0x30, 
	0x00, 0x28, 0x38, 0x00, 0x28, 0x37, 0x01, 0x40, 0x00, 0x01, 0x82, 0x66, 0x00, 0x1c, 0x30, 0x00, 
	0x0c, 0x38, 0x00, 0x3a, 0x61, 0x81, 0x00, 0x00, 0x0f, 0x43, 0xc6, 0x00, 0x1c, 0x34, 0x00, 0x28, 
	0x38, 0x00, 0x6e, 0x41, 0x80, 0x00, 0x00, 0x7f, 0xb3, 0x06, 0x00, 0x1c, 0x27, 0x00, 0xe8, 0x38, 
	0x00, 0x63, 0xc3, 0xe0, 0x00, 0x00, 0xe7, 0xde, 0x06, 0x00, 0x1c, 0x30, 0xdb, 0x08, 0x38, 0x00, 
	0x60, 0xcd, 0xde, 0x00, 0x01, 0xd0, 0x7c, 0x04, 0x00, 0x1c, 0x12, 0x01, 0x18, 0x38, 0x00, 0x60, 
	0x7b, 0xf7, 0x00, 0x01, 0x80, 0x8e, 0x0c, 0x00, 0x1c, 0x18, 0x00, 0x38, 0x30, 0x00, 0x20, 0x3e, 
	0x0b, 0x00, 0x01, 0x81, 0x0d, 0x9c, 0x00, 0x1c, 0x1c, 0x00, 0x70, 0x70, 0x00, 0x30, 0x71, 0x01, 
	0x80, 0x01, 0x81, 0x03, 0xf8, 0x00, 0x0e, 0x0c, 0x00, 0xa0, 0x70, 0x00, 0x39, 0xe0, 0x81, 0x80, 
	0x01, 0x81, 0x01, 0xe0, 0x00, 0x0e, 0x04, 0x80, 0x60, 0xf0, 0x00, 0x1f, 0xc0, 0x81, 0x80, 0x00, 
	0xc1, 0x00, 0x00, 0x00, 0x0f, 0x06, 0x81, 0x60, 0xe0, 0x00, 0x07, 0x00, 0x83, 0x80, 0x00, 0x61, 
	0xe0, 0x00, 0x00, 0x07, 0x06, 0x02, 0x61, 0xe0, 0x00, 0x00, 0x00, 0x83, 0x00, 0x00, 0x39, 0xbc, 
	0x00, 0x00, 0x03, 0x87, 0x02, 0xc1, 0xc0, 0x00, 0x00, 0x0f, 0x86, 0x00, 0x00, 0x1f, 0x03, 0x00, 
	0x00, 0x03, 0xc3, 0x81, 0x87, 0x80, 0x00, 0x00, 0x39, 0x9c, 0x00, 0x00, 0x07, 0xf8, 0x00, 0x00, 
	0x01, 0xe1, 0x87, 0x8f, 0x80, 0x00, 0x00, 0xc0, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0xf8, 0xff, 0x1e, 0x00, 0x00, 0x00, 0x1f, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7e, 
	0x7c, 0x7c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xcf, 
	0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xff, 0xe0, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xff, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00
};

const unsigned char PROGMEM AA [] = {
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x71, 0xe3, 0xcf, 0xbc, 0xf7, 0xcf, 0x1f, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf3, 
	0xf7, 0xff, 0xfe, 0xf7, 0xef, 0x3f, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfb, 0xf7, 
	0x8e, 0xdf, 0xf7, 0x76, 0x1d, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf9, 0xe7, 0xce, 
	0x1f, 0xf7, 0xe7, 0x1c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xf9, 0xf3, 0xef, 0x3f, 
	0xf7, 0xe6, 0x1f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xdf, 0x7e, 0xef, 0xfb, 0xf7, 
	0x77, 0xdd, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xff, 0xf7, 0xff, 0xfb, 0x77, 0xff, 
	0xff, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xb8, 0xc3, 0x8d, 0x9b, 0x76, 0xc6, 0xdb, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x79, 0xf9, 0xe7, 0x9e, 0x7e, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x79, 0xfd, 0xff, 0xbf, 0x7f, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfc, 0xdd, 0xff, 0x73, 0xf7, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0xfc, 0xf9, 0xff, 0x7b, 0x7e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0xfd, 0xfd, 0xfb, 0xbb, 0x77, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x01, 0xdd, 0xfd, 0xff, 0xbf, 0x7f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x01, 0xff, 0xfd, 0xd7, 0x9e, 0x7f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfc, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xff, 0xc0, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xff, 0xf0, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0x83, 0xfc, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7c, 0xfe, 0x3e, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x00, 0x01, 0xf1, 0xff, 0x8f, 0x00, 0x00, 0x00, 0x00, 0x0e, 
	0x00, 0x00, 0x78, 0x1c, 0x00, 0x00, 0x01, 0xe7, 0xff, 0xc7, 0x80, 0x00, 0x00, 0x18, 0x1e, 0x00, 
	0x00, 0x7c, 0xc0, 0x00, 0x00, 0x03, 0xc6, 0x7e, 0x63, 0xc0, 0x00, 0x00, 0x23, 0x1f, 0x00, 0x00, 
	0x79, 0x02, 0x00, 0x00, 0x07, 0x88, 0x7c, 0x31, 0xc0, 0x00, 0x00, 0x20, 0x9e, 0x00, 0x00, 0x30, 
	0x00, 0x00, 0x00, 0x07, 0x08, 0x7c, 0x10, 0xe0, 0x00, 0x00, 0x00, 0x2c, 0x00, 0x00, 0xf2, 0x19, 
	0x00, 0x00, 0x0e, 0x18, 0x3c, 0x30, 0xe0, 0x00, 0x00, 0x58, 0x2f, 0x00, 0x00, 0xfe, 0x38, 0x80, 
	0x00, 0x0e, 0x10, 0x3c, 0x10, 0x70, 0x00, 0x00, 0x9e, 0x7f, 0x80, 0x00, 0xff, 0xe0, 0x93, 0x30, 
	0x1e, 0x14, 0x00, 0x18, 0x70, 0x05, 0x38, 0x07, 0xff, 0x80, 0x01, 0xf9, 0xc1, 0x00, 0x00, 0x1c, 
	0x14, 0x00, 0x38, 0x70, 0x00, 0x00, 0xc1, 0x9f, 0x80, 0x01, 0xf8, 0x04, 0x00, 0x00, 0x1c, 0x30, 
	0x00, 0x28, 0x38, 0x00, 0x08, 0x20, 0x1f, 0x80, 0x01, 0xf8, 0x92, 0x70, 0x10, 0x1c, 0x30, 0x00, 
	0x0c, 0x38, 0x00, 0x06, 0x0c, 0x0f, 0xc0, 0x03, 0xf0, 0x48, 0x00, 0x10, 0x1c, 0x34, 0x00, 0x28, 
	0x38, 0x08, 0x00, 0x43, 0x0f, 0xc0, 0x03, 0xf0, 0x04, 0x50, 0x00, 0x1c, 0x27, 0x00, 0xe8, 0x38, 
	0x00, 0x09, 0x30, 0x0f, 0xc0, 0x01, 0xf8, 0x00, 0x00, 0x00, 0x1c, 0x30, 0xdb, 0x08, 0x38, 0x00, 
	0x08, 0x00, 0x0f, 0xc0, 0x01, 0xf8, 0x00, 0x10, 0x10, 0x1c, 0x12, 0x01, 0x18, 0x38, 0x00, 0x00, 
	0x00, 0x1f, 0x80, 0x00, 0xfc, 0x12, 0x9a, 0x90, 0x1c, 0x18, 0x00, 0x38, 0x30, 0x0d, 0x3d, 0x20, 
	0x3f, 0x80, 0x00, 0xee, 0x02, 0x02, 0x00, 0x1c, 0x1c, 0x00, 0x70, 0x70, 0x01, 0x00, 0x24, 0x7b, 
	0x00, 0x00, 0xe7, 0x02, 0x90, 0x90, 0x0e, 0x0c, 0x00, 0xa0, 0x70, 0x00, 0x48, 0x80, 0x77, 0x00, 
	0x00, 0xe7, 0x10, 0x50, 0x10, 0x0e, 0x04, 0x80, 0x60, 0xf0, 0x00, 0x06, 0x04, 0x73, 0x80, 0x01, 
	0xc6, 0x00, 0x00, 0x00, 0x0f, 0x06, 0x81, 0x60, 0xe0, 0x00, 0x01, 0x00, 0x73, 0x80, 0x01, 0xc7, 
	0x00, 0x60, 0x00, 0x07, 0x06, 0x02, 0x61, 0xe0, 0x08, 0x04, 0x00, 0x71, 0x80, 0x03, 0x87, 0x10, 
	0x00, 0x10, 0x03, 0x87, 0x02, 0xc1, 0xc0, 0x00, 0x08, 0x04, 0x61, 0xc0, 0x03, 0x86, 0x00, 0x10, 
	0x10, 0x03, 0xc3, 0x81, 0x87, 0x80, 0x00, 0x08, 0x04, 0x71, 0xc0, 0x01, 0x86, 0x19, 0x35, 0x90, 
	0x01, 0xe1, 0x87, 0x8f, 0x80, 0x06, 0xc9, 0x48, 0x60, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0xf8, 0xff, 0x1e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7e, 
	0x7c, 0x7c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xcf, 
	0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xff, 0xe0, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xff, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00
};

const unsigned char PROGMEM AD [] = {
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xc7, 
	0x9c, 0x38, 0x71, 0xe7, 0xef, 0x7b, 0xe7, 0x8f, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x03, 0xf7, 0xbe, 
	0x78, 0xff, 0xff, 0xef, 0x7f, 0xfb, 0x8f, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x03, 0xbb, 0x7e, 0x7d, 
	0xfb, 0xc7, 0x6f, 0xf9, 0xbb, 0x8e, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x03, 0xbb, 0x7c, 0x7c, 0xfb, 
	0xe7, 0x0f, 0xfb, 0xf3, 0x0f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xbb, 0x9f, 0x7c, 0xf9, 0xf7, 
	0xcf, 0xfb, 0xf3, 0x8e, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x03, 0xbb, 0x7f, 0xee, 0xdf, 0x77, 0x6d, 
	0xfb, 0xbb, 0xee, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x03, 0xf7, 0xfe, 0xfe, 0xff, 0xff, 0xff, 0xbf, 
	0xff, 0xef, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x03, 0xc6, 0x98, 0xde, 0x71, 0xc6, 0xcc, 0xb1, 0xc3, 
	0x6f, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x79, 0xf9, 0xef, 0xbe, 0x7e, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x79, 0xfd, 0xff, 0xbf, 0x7f, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfc, 0xfd, 0xff, 0x33, 0xf7, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0xfc, 0xf9, 0xff, 0xfb, 0x7e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0xfc, 0xdd, 0xfb, 0x3b, 0x77, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x01, 0xdf, 0xfd, 0xff, 0xbf, 0x7f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x01, 0xff, 0xff, 0xd7, 0x9e, 0x7f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfc, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xff, 0xc0, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xff, 0xf0, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0x83, 0xfc, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7c, 0xfe, 0x3e, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x00, 0x01, 0xf1, 0xff, 0x8f, 0x00, 0x00, 0x00, 0x00, 0x0e, 
	0x00, 0x00, 0x78, 0x1c, 0x00, 0x00, 0x01, 0xe7, 0xff, 0xc7, 0x80, 0x00, 0x00, 0x18, 0x1e, 0x00, 
	0x00, 0x7c, 0xc0, 0x00, 0x00, 0x03, 0xc6, 0x7e, 0x63, 0xc0, 0x00, 0x00, 0x23, 0x1f, 0x00, 0x00, 
	0x79, 0x02, 0x00, 0x00, 0x07, 0x88, 0x7c, 0x31, 0xc0, 0x00, 0x00, 0x20, 0x9e, 0x00, 0x00, 0x30, 
	0x00, 0x00, 0x00, 0x07, 0x08, 0x7c, 0x10, 0xe0, 0x00, 0x00, 0x00, 0x2c, 0x00, 0x00, 0xf2, 0x19, 
	0x00, 0x00, 0x0e, 0x18, 0x3c, 0x30, 0xe0, 0x00, 0x00, 0x58, 0x2f, 0x00, 0x00, 0xfe, 0x38, 0x80, 
	0x00, 0x0e, 0x10, 0x3c, 0x10, 0x70, 0x00, 0x00, 0x9e, 0x7f, 0x80, 0x00, 0xff, 0xe0, 0x93, 0x30, 
	0x1e, 0x14, 0x00, 0x18, 0x70, 0x05, 0x38, 0x07, 0xff, 0x80, 0x01, 0xf9, 0xc1, 0x00, 0x00, 0x1c, 
	0x14, 0x00, 0x38, 0x70, 0x00, 0x00, 0xc1, 0x9f, 0x80, 0x01, 0xf8, 0x04, 0x00, 0x00, 0x1c, 0x30, 
	0x00, 0x28, 0x38, 0x00, 0x08, 0x20, 0x1f, 0x80, 0x01, 0xf8, 0x92, 0x70, 0x10, 0x1c, 0x30, 0x00, 
	0x0c, 0x38, 0x00, 0x06, 0x0c, 0x0f, 0xc0, 0x03, 0xf0, 0x48, 0x00, 0x10, 0x1c, 0x34, 0x00, 0x28, 
	0x38, 0x08, 0x00, 0x43, 0x0f, 0xc0, 0x03, 0xf0, 0x04, 0x50, 0x00, 0x1c, 0x27, 0x00, 0xe8, 0x38, 
	0x00, 0x09, 0x30, 0x0f, 0xc0, 0x01, 0xf8, 0x00, 0x00, 0x00, 0x1c, 0x30, 0xdb, 0x08, 0x38, 0x00, 
	0x08, 0x00, 0x0f, 0xc0, 0x01, 0xf8, 0x00, 0x10, 0x10, 0x1c, 0x12, 0x01, 0x18, 0x38, 0x00, 0x00, 
	0x00, 0x1f, 0x80, 0x00, 0xfc, 0x12, 0x9a, 0x90, 0x1c, 0x18, 0x00, 0x38, 0x30, 0x0d, 0x3d, 0x20, 
	0x3f, 0x80, 0x00, 0xee, 0x02, 0x02, 0x00, 0x1c, 0x1c, 0x00, 0x70, 0x70, 0x01, 0x00, 0x24, 0x7b, 
	0x00, 0x00, 0xe7, 0x02, 0x90, 0x90, 0x0e, 0x0c, 0x00, 0xa0, 0x70, 0x00, 0x48, 0x80, 0x77, 0x00, 
	0x00, 0xe7, 0x10, 0x50, 0x10, 0x0e, 0x04, 0x80, 0x60, 0xf0, 0x00, 0x06, 0x04, 0x73, 0x80, 0x01, 
	0xc6, 0x00, 0x00, 0x00, 0x0f, 0x06, 0x81, 0x60, 0xe0, 0x00, 0x01, 0x00, 0x73, 0x80, 0x01, 0xc7, 
	0x00, 0x60, 0x00, 0x07, 0x06, 0x02, 0x61, 0xe0, 0x08, 0x04, 0x00, 0x71, 0x80, 0x03, 0x87, 0x10, 
	0x00, 0x10, 0x03, 0x87, 0x02, 0xc1, 0xc0, 0x00, 0x08, 0x04, 0x61, 0xc0, 0x03, 0x86, 0x00, 0x10, 
	0x10, 0x03, 0xc3, 0x81, 0x87, 0x80, 0x00, 0x08, 0x04, 0x71, 0xc0, 0x01, 0x86, 0x19, 0x35, 0x90, 
	0x01, 0xe1, 0x87, 0x8f, 0x80, 0x06, 0xc9, 0x48, 0x60, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0xf8, 0xff, 0x1e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7e, 
	0x7c, 0x7c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xcf, 
	0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xff, 0xe0, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xff, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00
};

const unsigned char PROGMEM MIX [] = {
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xff, 0x80, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xff, 0xf0, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xff, 0xfc, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 
	0x00, 0x0f, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xfe, 0x00, 0xff, 0xc0, 0x00, 0x00, 0x00, 
	0x7c, 0x5f, 0x80, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xf1, 0xff, 0x1f, 0xe0, 0x00, 0x00, 0x01, 0xf0, 
	0x03, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xc7, 0xff, 0xc7, 0xf0, 0x00, 0x00, 0x07, 0x70, 0x03, 
	0x38, 0x00, 0x00, 0x00, 0x00, 0x3f, 0x0f, 0xff, 0xe1, 0xf8, 0x00, 0x00, 0x0c, 0x30, 0x03, 0x0c, 
	0x00, 0x00, 0x00, 0x00, 0x7e, 0x1f, 0xff, 0xf0, 0xfc, 0x00, 0x00, 0x18, 0x38, 0x07, 0x06, 0x00, 
	0x00, 0x00, 0x00, 0xfc, 0x39, 0xff, 0x38, 0x7e, 0x00, 0x00, 0x30, 0x38, 0x07, 0x03, 0x00, 0x00, 
	0x00, 0x00, 0xf8, 0x70, 0xff, 0x1c, 0x1f, 0x00, 0x00, 0x60, 0x18, 0x06, 0x01, 0x80, 0x00, 0x00, 
	0x01, 0xf0, 0x60, 0xfe, 0x06, 0x1f, 0x00, 0x00, 0xc0, 0x1c, 0x0e, 0x00, 0xc0, 0x00, 0x00, 0x03, 
	0xe0, 0xc0, 0xfe, 0x06, 0x0f, 0x80, 0x01, 0xff, 0xff, 0xff, 0xff, 0xe0, 0x00, 0x00, 0x03, 0xe0, 
	0xc0, 0xfe, 0x06, 0x07, 0x80, 0x01, 0xdb, 0x66, 0xd3, 0x6d, 0xe0, 0x00, 0x00, 0x07, 0xc0, 0xc0, 
	0x7c, 0x02, 0x07, 0xc0, 0x03, 0xe0, 0x00, 0x00, 0x00, 0xf0, 0x00, 0x00, 0x07, 0x81, 0x80, 0x7c, 
	0x03, 0x03, 0xc0, 0x03, 0xf0, 0x00, 0x00, 0x03, 0xf0, 0x00, 0x00, 0x07, 0x81, 0xa0, 0x7c, 0x07, 
	0x03, 0xc0, 0x07, 0x3c, 0x00, 0x00, 0x0f, 0x70, 0x00, 0x00, 0x0f, 0x81, 0xa0, 0x00, 0x0b, 0x01, 
	0xe0, 0x05, 0x8f, 0x24, 0x92, 0x7c, 0x68, 0x00, 0x00, 0x0f, 0x01, 0x80, 0x00, 0x03, 0x01, 0xe0, 
	0x04, 0xc3, 0xff, 0xff, 0xf8, 0xc8, 0x00, 0x00, 0x0f, 0x03, 0xa0, 0x00, 0x03, 0x81, 0xe0, 0x0c, 
	0xc1, 0xff, 0xff, 0xe0, 0xc8, 0x00, 0x00, 0x0f, 0x03, 0xa0, 0x00, 0x09, 0x81, 0xf0, 0x0c, 0x60, 
	0xf2, 0x49, 0xc1, 0x8c, 0x00, 0x00, 0x0f, 0x03, 0x20, 0x00, 0x03, 0x80, 0xf0, 0x08, 0x30, 0xf0, 
	0x03, 0xc3, 0x0c, 0x00, 0x00, 0x1f, 0x03, 0x00, 0x00, 0x01, 0x80, 0xf0, 0x08, 0x30, 0x70, 0x03, 
	0x83, 0x04, 0x00, 0x00, 0x1e, 0x03, 0x30, 0x00, 0x19, 0x80, 0xf0, 0x0c, 0x18, 0x78, 0x07, 0x86, 
	0x04, 0x00, 0x00, 0x0f, 0x02, 0x3c, 0x00, 0x78, 0x80, 0xf0, 0x08, 0x18, 0x38, 0x07, 0x06, 0x0c, 
	0x00, 0x00, 0x0f, 0x03, 0x23, 0xcf, 0x81, 0x80, 0xf0, 0x08, 0x7c, 0x1c, 0x0e, 0x0f, 0x8c, 0x00, 
	0x00, 0x1f, 0x03, 0x20, 0x80, 0x39, 0x80, 0xe0, 0x0f, 0xfc, 0x1c, 0x0e, 0x0f, 0xfc, 0x00, 0x00, 
	0x0f, 0x03, 0x84, 0x00, 0x83, 0x81, 0xe0, 0x0f, 0xe6, 0x0e, 0x1c, 0x19, 0xf8, 0x00, 0x00, 0x0f, 
	0x03, 0xc0, 0x00, 0x07, 0x81, 0xe0, 0x07, 0x03, 0x0f, 0x3c, 0x30, 0x18, 0x00, 0x00, 0x0f, 0x01, 
	0xe0, 0x00, 0x0f, 0x01, 0xe0, 0x04, 0x03, 0x07, 0x38, 0x30, 0x08, 0x00, 0x00, 0x0f, 0x80, 0xf0, 
	0x00, 0x16, 0x01, 0xe0, 0x06, 0x01, 0x87, 0xf8, 0x60, 0x18, 0x00, 0x00, 0x07, 0x80, 0x68, 0x00, 
	0x2c, 0x03, 0xc0, 0x02, 0x01, 0x83, 0xf0, 0x60, 0x10, 0x00, 0x00, 0x07, 0x80, 0x64, 0x00, 0x4c, 
	0x03, 0xc0, 0x02, 0x00, 0xc1, 0xe0, 0xc0, 0x10, 0x00, 0x00, 0x07, 0xc0, 0x72, 0x00, 0x9c, 0x07, 
	0xc0, 0x03, 0x00, 0xc1, 0xe1, 0xc0, 0x30, 0x00, 0x00, 0x03, 0xc0, 0x32, 0x00, 0x9c, 0x07, 0x80, 
	0x01, 0x81, 0xe0, 0xc1, 0xf0, 0x60, 0x00, 0x00, 0x03, 0xe0, 0x78, 0x00, 0x3c, 0x0f, 0x80, 0x00, 
	0x83, 0xf0, 0xc3, 0x70, 0x40, 0x00, 0x00, 0x01, 0xf0, 0x39, 0xdf, 0x38, 0x1f, 0x00, 0x00, 0xc7, 
	0x30, 0xc3, 0x3c, 0xc0, 0x00, 0x00, 0x00, 0xf8, 0x19, 0x00, 0x38, 0x1f, 0x00, 0x00, 0x6e, 0x18, 
	0xc6, 0x1f, 0x80, 0x00, 0x00, 0x00, 0xfc, 0x1f, 0x01, 0xf0, 0x3e, 0x00, 0x00, 0x3c, 0x18, 0xc6, 
	0x0f, 0x00, 0x00, 0x00, 0x00, 0x7e, 0x0f, 0x01, 0xe0, 0xfc, 0x00, 0x00, 0x1c, 0x0c, 0xcc, 0x06, 
	0x00, 0x00, 0x00, 0x00, 0x3f, 0x07, 0x6d, 0xc1, 0xf8, 0x00, 0x00, 0x0c, 0x06, 0xd8, 0x1c, 0x00, 
	0x00, 0x00, 0x00, 0x1f, 0xc3, 0xff, 0x83, 0xf0, 0x00, 0x00, 0x03, 0x86, 0xd8, 0x70, 0x00, 0x00, 
	0x00, 0x00, 0x0f, 0xe1, 0xff, 0x8f, 0xe0, 0x00, 0x00, 0x01, 0xe3, 0xf1, 0xc0, 0x00, 0x00, 0x00, 
	0x00, 0x07, 0xfe, 0x00, 0x7f, 0xc0, 0x00, 0x00, 0x00, 0x3f, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x01, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x07, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x7f, 0xff, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 
	0xff, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xff, 
	0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00
};

const unsigned char PROGMEM ALL [] = {
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x40, 0x03, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x79, 
	0xe7, 0x81, 0xf7, 0xff, 0xff, 0xbf, 0xfb, 0xdf, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x79, 0xc3, 
	0x83, 0xf7, 0xef, 0xff, 0xbb, 0x7f, 0xdf, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7c, 0xc3, 0x01, 
	0xe3, 0xef, 0x8e, 0x3c, 0x7f, 0xdf, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfc, 0xc3, 0x01, 0xf1, 
	0xc7, 0xce, 0x3c, 0x7f, 0xcf, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfc, 0xfb, 0xe3, 0xf1, 0xcf, 
	0xce, 0x3b, 0x6f, 0xdf, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xe3, 0xf3, 0xcf, 0xcf, 
	0x3f, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfd, 0xfb, 0xe1, 0xe1, 0xc7, 0x0e, 0x3f, 
	0x65, 0xce, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3c, 0x7f, 0xff, 0xff, 0xbf, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3c, 0xef, 0xff, 0x9f, 0xbb, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3e, 0xe0, 0x71, 0x9f, 0x3c, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x3e, 0xe0, 0x71, 0x9f, 0x38, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x3e, 0xec, 0x71, 0x8f, 0x3b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x3f, 0x7c, 0xf3, 0xce, 0x3f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 
	0x00, 0x00, 0x3e, 0x38, 0xf3, 0x8e, 0x3f, 0x00, 0x00, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x1f, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x1f, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x78, 0x00, 0x00, 0x00, 0x00, 0x1f, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x1f, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x1f, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x1f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x3f, 0xc0, 0x00, 0x00, 0x01, 0xff, 0x80, 0x00, 
	0x00, 0x03, 0xfc, 0x00, 0x00, 0x00, 0x00, 0xff, 0xe8, 0x00, 0x00, 0x0f, 0xff, 0xe0, 0x00, 0x00, 
	0x07, 0xff, 0x00, 0x00, 0x00, 0x0d, 0xff, 0xfe, 0x00, 0x00, 0x3f, 0xef, 0xf8, 0x00, 0x00, 0x7f, 
	0xff, 0x80, 0x00, 0x00, 0x1f, 0xff, 0xff, 0x00, 0x00, 0x7e, 0x7c, 0x7c, 0x00, 0x00, 0xff, 0xff, 
	0xf8, 0x00, 0x00, 0x3f, 0xff, 0xff, 0x00, 0x00, 0xf9, 0xff, 0x1e, 0x00, 0x00, 0xff, 0xff, 0xfc, 
	0x00, 0x00, 0x3f, 0xdf, 0x8f, 0x00, 0x01, 0xe3, 0xff, 0xcf, 0x00, 0x00, 0xf1, 0xfb, 0xfc, 0x00, 
	0x00, 0x3f, 0x8f, 0x07, 0x00, 0x03, 0xc6, 0x7e, 0xc7, 0x80, 0x00, 0xe0, 0xf1, 0xfc, 0x00, 0x00, 
	0x1f, 0x9f, 0x06, 0x00, 0x03, 0x8c, 0x7c, 0x23, 0xc0, 0x00, 0x60, 0xf9, 0xf8, 0x00, 0x00, 0x1f, 
	0xff, 0x06, 0x00, 0x07, 0x08, 0x7c, 0x21, 0xc0, 0x00, 0x60, 0xff, 0xf8, 0x00, 0x00, 0x3f, 0xff, 
	0x07, 0x00, 0x07, 0x08, 0x3c, 0x30, 0xe0, 0x00, 0xe0, 0xff, 0xfc, 0x00, 0x00, 0x3f, 0xff, 0xaf, 
	0x00, 0x0e, 0x18, 0x38, 0x30, 0xe0, 0x00, 0xf4, 0xff, 0xfc, 0x00, 0x00, 0x7f, 0xff, 0x0f, 0x80, 
	0x0e, 0x10, 0x00, 0x10, 0x60, 0x01, 0xf0, 0xff, 0xfe, 0x00, 0x00, 0x7b, 0xf8, 0x07, 0xc0, 0x0c, 
	0x10, 0x00, 0x10, 0x70, 0x03, 0xe0, 0x1f, 0xde, 0x00, 0x00, 0xf1, 0xf0, 0x23, 0xc0, 0x1c, 0x30, 
	0x00, 0x18, 0x70, 0x03, 0x84, 0x0f, 0x8e, 0x00, 0x00, 0xf1, 0xf0, 0x20, 0xf0, 0x1c, 0x30, 0x00, 
	0x18, 0x70, 0x0f, 0x04, 0x0f, 0x8f, 0x00, 0x01, 0xf1, 0xf0, 0x20, 0xf0, 0x1c, 0x30, 0x00, 0x18, 
	0x70, 0x0f, 0x04, 0x0f, 0x8f, 0x80, 0x03, 0xe1, 0xe0, 0x00, 0xf0, 0x1c, 0x26, 0x00, 0x48, 0x70, 
	0x0f, 0x00, 0x07, 0x87, 0xc0, 0x07, 0xc1, 0xe0, 0x00, 0xf8, 0x1c, 0x21, 0x83, 0x08, 0x70, 0x0f, 
	0x00, 0x07, 0x83, 0xe0, 0x0f, 0x83, 0xe0, 0x00, 0xf8, 0x1c, 0x30, 0x00, 0x18, 0x70, 0x1f, 0x00, 
	0x07, 0xc1, 0xf0, 0x1f, 0x83, 0xe0, 0x00, 0x78, 0x1c, 0x38, 0x00, 0x38, 0x70, 0x1e, 0x00, 0x07, 
	0xc1, 0xf8, 0x3e, 0x03, 0xe0, 0x00, 0x38, 0x1c, 0x1c, 0x00, 0x30, 0x70, 0x1c, 0x00, 0x07, 0xc0, 
	0x7c, 0x3c, 0x07, 0xe0, 0x00, 0x38, 0x0e, 0x0c, 0x00, 0x20, 0x60, 0x1c, 0x00, 0x07, 0xe0, 0x2c, 
	0x20, 0x07, 0xe0, 0x00, 0x38, 0x0e, 0x04, 0x00, 0x60, 0xe0, 0x1c, 0x00, 0x07, 0xe0, 0x04, 0x38, 
	0x07, 0xe0, 0x00, 0x38, 0x0f, 0x04, 0x00, 0x60, 0xe0, 0x18, 0x00, 0x07, 0xe0, 0x1c, 0x18, 0x07, 
	0xe0, 0x00, 0x70, 0x07, 0x06, 0x00, 0xe1, 0xc0, 0x0e, 0x00, 0x07, 0xe0, 0x18, 0x00, 0x0f, 0xe0, 
	0x00, 0x00, 0x07, 0x86, 0x00, 0xc3, 0xc0, 0x00, 0x00, 0x07, 0xf0, 0x00, 0x00, 0x0f, 0xe0, 0x00, 
	0x00, 0x03, 0xc3, 0x82, 0x83, 0x80, 0x00, 0x00, 0x07, 0xf0, 0x00, 0x00, 0x0f, 0xe0, 0x00, 0x00, 
	0x01, 0xe1, 0x83, 0x87, 0x00, 0x00, 0x00, 0x07, 0xf0, 0x00, 0x00, 0x0f, 0xe0, 0x00, 0x00, 0x00, 
	0xf1, 0xff, 0x1e, 0x00, 0x00, 0x00, 0x07, 0xf0, 0x00, 0x00, 0x0f, 0xf0, 0x00, 0x00, 0x00, 0x7c, 
	0xfe, 0x7c, 0x00, 0x00, 0x00, 0x0f, 0xf0, 0x00, 0x00, 0x0f, 0xf0, 0x00, 0x00, 0x00, 0x3f, 0x83, 
	0xf8, 0x00, 0x00, 0x00, 0x0f, 0xf0, 0x00, 0x00, 0x0f, 0xf0, 0x40, 0x00, 0x00, 0x0f, 0xff, 0xe0, 
	0x00, 0x00, 0x02, 0x0f, 0xe0, 0x00, 0x00, 0x07, 0xf0, 0x60, 0x00, 0x00, 0x03, 0xff, 0x80, 0x00, 
	0x00, 0x06, 0x0f, 0xe0, 0x00, 0x00, 0x07, 0xf0, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x06, 0x0f, 0xe0, 0x00
};



///////// INFORMACIÓN WIFI //////////
const char* ssid = "IRON"; // EDITAR PARA LA RED LOCAL A LA CUAL SE VAYA A CONECTAR EL ESP8266 /// por defecto (ssid: "IRON", password: 12345678j)
const char* password = "12345678j"; ///****************************************///


// Configuracion del servidor WiFi en el puerto 80
WiFiServer server(80);  ///// PUERTO DE CONECCIÓN WIFI

String header;

// Variables para el manejo de tiempo y cabeceras HTTP
unsigned long lastTime, timeout = 2000;

///////////////////////////// PINES LEDS ///////////////////////////
// Definicion de pines para LEDs
const int LED1 = 16; // pin de salida          ///// EDITAR SEGÚN LOS PINES UTILIZADOS EN LA TECNOLOGIA DE IRONMAN SON LOS 5,4,0 y 2 respectivamente. ////////////////////
const int LED2 = 2; // pin de salida
const int LED3 = 14; // pin de salida

int wait = 1000;

// Variables para almacenar el estado de las salidas
String outputState =  "apagado"; //almacenar el estado actual de la salida
String outputState1 = "apagado"; //almacenar el estado actual de la salida 1
String outputState2 = "apagado"; //almacenar el estado actual de la salida 2
String outputState3 = "apagado"; //almacenar el estado actual de la salida 3
String outputState4 = "apagado"; //almacenar el estado actual de la salida 3
String status;   /////VARIABLE QUE DETERMINA EL ESTADO A MOSTRAR EN OLED



/* ------------------------- FUNCIONES DEL CODIGO ---------------------------- */

/* FUNCIONES PARA MOSTRAR ANIMACIONES  */

// Funcion para mostrar una animacion de desplazamiento con el logo
void testscrolliron(void) {
 
 display.clearDisplay();
 display.setTextSize(1);
 display.setTextColor(WHITE);
 display.setCursor(0, 56);
 display.println("By Juan D. Alfonso");
 display.drawBitmap((display.width()-  LOGO_WIDTH2)/2, 0, logoiron, LOGO_WIDTH2, LOGO_HEIGHT2, WHITE);
 display.display();


 // Desplazamiento de la pantalla en varias direcciones con pausas entre ellas:
  display.startscrollright(0x00, 0x0F);
  delay(4000);
  display.stopscroll();
  delay(1000);
  display.startscrollleft(0x00, 0x0F);
  delay(4000);
  display.stopscroll();
  delay(1000);
}
// Funcion para mostrar la direccion IP en la pantalla OLED
void IPSCREEN(){
  display.clearDisplay();
  display.setTextSize(1);
  display.setTextColor(WHITE);
  display.setCursor(0, 10);
  display.println("Dispositivo conectado");
  display.setCursor(22, 30);
  display.println(" Direccion IP: ");
  display.setCursor(20, 50);
  display.println(WiFi.localIP());                                  /////////////IMPRIME LA DIRECCION IP EN PANTALLA 
  display.display();
}

void IRON_F(void) {
 
 display.clearDisplay();
 display.drawBitmap((display.width()-  LOGO_WIDTH)/2, (display.height()-  LOGO_HEIGHT)/2, iron, LOGO_WIDTH, LOGO_HEIGHT, WHITE);
 display.display();

}

void SA_F(void) {
 
 display.clearDisplay();
 display.drawBitmap((display.width()-  LOGO_WIDTH)/2, (display.height()-  LOGO_HEIGHT)/2, SA, LOGO_WIDTH, LOGO_HEIGHT, WHITE);
 display.display();

}

void MS_F(void) {
 
 display.clearDisplay();
 display.drawBitmap((display.width()-  LOGO_WIDTH)/2, (display.height()-  LOGO_HEIGHT)/2, MIX, LOGO_WIDTH, LOGO_HEIGHT, WHITE);
 display.display();
}

void SD_F(void) {
 
 display.clearDisplay();
 display.drawBitmap((display.width()-  LOGO_WIDTH)/2, (display.height()-  LOGO_HEIGHT)/2, SD, LOGO_WIDTH, LOGO_HEIGHT, WHITE);
 display.display();
}

void PA_F(void) {
 
 display.clearDisplay();
 display.drawBitmap((display.width()-  LOGO_WIDTH)/2, (display.height()-  LOGO_HEIGHT)/2, PA, LOGO_WIDTH, LOGO_HEIGHT, WHITE);
 display.display();

}

void PD_F(void) {
 
 display.clearDisplay();
 display.drawBitmap((display.width()-  LOGO_WIDTH)/2, (display.height()-  LOGO_HEIGHT)/2, PD, LOGO_WIDTH, LOGO_HEIGHT, WHITE);
 display.display();
}

void AA_F(void) {
 
 display.clearDisplay();
 display.drawBitmap((display.width()-  LOGO_WIDTH)/2, (display.height()-  LOGO_HEIGHT)/2, AA, LOGO_WIDTH, LOGO_HEIGHT, WHITE);
 display.display();

}

void AD_F(void) {
 
 display.clearDisplay();
 display.drawBitmap((display.width()-  LOGO_WIDTH)/2, (display.height()-  LOGO_HEIGHT)/2, AD, LOGO_WIDTH, LOGO_HEIGHT, WHITE);
 display.display();

}

void ALL_F(void) {
 
 display.clearDisplay();
 display.drawBitmap((display.width()-  LOGO_WIDTH)/2, (display.height()-  LOGO_HEIGHT)/2, ALL, LOGO_WIDTH, LOGO_HEIGHT, WHITE);
 display.display();
}

// Las siguientes funciones controlan diferentes combinaciones de LEDs
void LED1_F(){
 digitalWrite(LED1, LOW);
 digitalWrite(LED2, HIGH);
 digitalWrite(LED3, HIGH);
}

void LED2_F(){
 digitalWrite(LED1, HIGH);
 digitalWrite(LED2,  LOW);
 digitalWrite(LED3, HIGH);
}

void LED3_F(){
 digitalWrite(LED1,HIGH);
 digitalWrite(LED2,HIGH);
 digitalWrite(LED3, LOW);
}
 
 
void MIX_F(){
 LED1_F();
 delay(wait);
 LED2_F();
 delay(wait);
 LED3_F();
 delay(wait);
}

//Funcion que apaga todos los leds 

//Funcion que apaga todos los leds 
void OFF_F(){
  digitalWrite(LED1, HIGH);
  digitalWrite(LED2, HIGH);
  digitalWrite(LED3, HIGH);
}

//Funcion que enciende todos los leds 
void LALL_F(){
 digitalWrite(LED1, LOW);
 digitalWrite(LED2, LOW);
 digitalWrite(LED3, LOW);
}


void colorWipe(uint32_t color, int wait) {
  for(int i=0; i<strip.numPixels(); i++) { // For each pixel in strip...
    strip.setPixelColor(i, color);         //  Set pixel's color (in RAM)
    strip.show();                          //  Update strip to match
    delay(wait);                           //  Pause for a moment
  }
}

void theaterChase(uint32_t color, int wait) {
  for(int a=0; a<10; a++) {  // Repeat 10 times...
    for(int b=0; b<3; b++) { //  'b' counts from 0 to 2...
      strip.clear();         //   Set all pixels in RAM to 0 (off)
      // 'c' counts up from 'b' to end of strip in steps of 3...
      for(int c=b; c<strip.numPixels(); c += 3) {
        strip.setPixelColor(c, color); // Set pixel 'c' to value 'color'
      }
      strip.show(); // Update strip with new contents
      delay(wait);  // Pause for a moment
    }
  }
}


void setup() {
  // Inicializa la comunicacion serial a una velocidad de 115200 baudios.
  Serial.begin(115200);
  // Configura los pines de los LEDs como salidas.
  pinMode(LED1, OUTPUT);
  pinMode(LED2, OUTPUT);
  pinMode(LED3, OUTPUT);
  // Apaga todos los LEDs.
  

  #if defined(__AVR_ATtiny85__) && (F_CPU == 16000000)
  clock_prescale_set(clock_div_1);
  #endif
  // END of Trinket-specific code.

  OFF_F();
  strip.begin();           // INITIALIZE NeoPixel strip object (REQUIRED)
  strip.show();            // Turn OFF all pixels ASAP
  strip.setBrightness(255); // Set BRIGHTNESS to about 1/5 (max = 255)


  // Intenta iniciar la pantalla OLED. Si falla, imprime un mensaje de error y entra en un bucle infinito.
  if(!display.begin(SSD1306_SWITCHCAPVCC, SCREEN_ADDRESS)) {
    Serial.println(F("SSD1306 allocation failed"));                                  // SSD1306_SWITCHCAPVCC = generate display voltage from 3.3V internally
    for(;;); // Don't proceed, loop forever
  } 

  // Muestra una animacion inicial en la pantalla OLED.
  testscrolliron();    
  delay(5000); 
  IRON_F();    
  delay(3000);  

  // Imprime un mensaje en la consola serial indicando que esta intentando conectarse a la red WiFi.
  Serial.print("Conectando a ");
  Serial.println(ssid);

 // Inicia el proceso de conexion a la red WiFi con las credenciales proporcionadas.
  WiFi.begin(ssid,password);

 // Muestra un mensaje en la pantalla OLED indicando que esta intentando conectarse a la red WiFi.
 /* ESTE ESPACIO ES REFERENTE A LA VISUALIZACION EN PANTALLA DE LA CONEXION A LA APK */ 
  display.clearDisplay();
  display.setTextSize(1);
  display.setTextColor(WHITE);
  display.setCursor(22, 10);
  display.println(" Conectando a ");
  display.setTextSize(2);
  display.setCursor(35, 25);
  display.println(ssid);             ///// SE IMPRIME EN OLED NOMBRE DE LA RED 
  display.setTextSize(2);
  display.setCursor(45, 45);
  display.println("APK");
  display.display();

 
  Serial.print("Conectando a ");                                      
  Serial.println(ssid);
  WiFi.begin(ssid,password);   

   // Mientras no este conectado a la red WiFi, sigue intentando y muestra puntos en la consola serial.
  while(WiFi.status() != WL_CONNECTED)
  {
    delay(500);
    Serial.print(".");
  }
  // Una vez conectado, muestra la direccion IP en la pantalla OLED.
  IPSCREEN();

 // Imprime un mensaje en la consola serial indicando que el dispositivo esta conectado y muestra la direccion IP.
  Serial.println("");
  Serial.println("Dispositivo conectado.");
  Serial.println("Direccion IP: ");
  Serial.print(WiFi.localIP());
  // Inicia el servidor en el puerto 80.
  server.begin();

}

void loop() {
 // Espera a que un cliente se conecte al servidor
  WiFiClient client = server.available();
// Si hay un cliente conectado
  if(client)
  {
     // Guarda el tiempo actual para controlar el tiempo de espera
    lastTime = millis();
     
    // Imprime un mensaje indicando que hay un nuevo cliente
    Serial.println("Nuevo cliente");

    // Inicializa una cadena para guardar la linea actual que se esta leyendo
    String currentLine = "";

 // Mientras el cliente este conectado y no se haya superado el tiempo de espera
    while(client.connected() && millis() - lastTime <= timeout)
    {

 // Si hay datos disponibles para leer del cliente
      if(client.available())
      { 
        // Lee un caracter del cliente  
        char c = client.read();
        Serial.write(c);
        header += c;
        
         // Si el caracter leido es un salto de linea
        if(c == '\n')
        {
          // Si la linea actual esta vacia, significa que hemos llegado al final del encabezado HTTP
          if(currentLine.length() == 0)
          {

            ////////// ENCABEZADO HTTP ////////////
             // Envia una respuesta HTTP al cliente
            client.println("HTTP/1.1 200 OK");
            client.println("Content-type:text/html");
            client.println("Connection: close");
            client.println();


             // Comprueba si el encabezado contiene ciertas cadenas y realiza acciones a partir de estas.

             ////COMANDOS LED 1 //////
            if (header.indexOf("GET /x") >= 0) {
              Serial.println("GPI5 encendido");
              outputState = "encendido";
              status = "B";
              PA_F();

            }   

             else if (header.indexOf("GET /offx") >= 0) {
              Serial.println("GPIO apagado");
              outputState = "apagado";
              status = "BF"; 
              PD_F();            
             }
             /////COMANDOS LED 2 ////////         
            else if (header.indexOf("GET /y") >= 0) {
              Serial.println("GPI4 encendido");
              outputState1 = "encendido";
              status = "R";
              AA_F();

            } 

              else if (header.indexOf("GET /offy") >= 0) {
              Serial.println("GPIO apagado");
              outputState1 = "apagado";
              status = "RF";
              AD_F();
             }

             ///// COMANDOS LED 3 ///////
             else if (header.indexOf("GET /z") >= 0) {
              Serial.println("GPIO encendido");
              outputState2 = "encendido";
              status = "G";
              SA_F();
            } 


              else if (header.indexOf("GET /offz") >= 0) {
              Serial.println("GPIO apagado");
              outputState2 = "apagado";
              status = "GF";
              SD_F();
             }

             //////APAGAR TODOS////
             // Comandos para apagar todos los LEDs
            else if (header.indexOf("GET /off") >= 0) {
              Serial.println("GPIO apagado");
              outputState3 = "apagado";  
              outputState4 = "apagado";      
              status = "OFF";
              IPSCREEN(); 
            } 


            ////// ENCENDER TODOS //////
            // Comandos para encender todos los LEDs
              else if (header.indexOf("GET /on") >= 0) {
              Serial.println("GPIO encendido");
              outputState3 = "encendido";
              status = "ON";
              ALL_F();

            }
            // Comandos para mezclar colores
            else if (header.indexOf("GET /m") >= 0) {
              Serial.println("GPIO encendido");
              outputState4 = "encendido";      
              status = "M";
              MS_F();
            }
            
            
             //////// PAGINA WEB //////////////
             
            client.println("<!DOCTYPE html><html>");
            client.println("<head><meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">");
            client.println("<link rel=\"icon\" href=\"data:,\">");
            client.println("</head>");
            client.println("<body></body>");
            client.println("</html>");
            client.println();
            break;
   
            /////////////////////////////////////
          }
          else
          {
              // Si la linea actual no esta vacia, la reinicia para la siguiente linea
            currentLine = "";
          }
        }
        // Si el caracter leido no es un retorno de carro, lo agrega  a la linea actual
        else if ( c != '\r')
        {
          currentLine += c;
        }
        
        
      }

      
    }
    
// Reinicia el encabezado y cierra la conexion con el cliente
    header = "";
    client.stop();
    Serial.println("Cliente desconectado.");
    Serial.println("");
  }

 // Aqui se revisa el estado actual y se toman acciones en funcion de ese estado
  

  if (status == "B") {  
    digitalWrite(LED1, LOW);
    colorWipe(strip.Color(0, 0, 255), 50);
  }

  else if (status == "BF"){
    digitalWrite(LED1, HIGH);
    colorWipe(strip.Color(0, 0, 0), 50); // Color negro con una velocidad de 50ms
  }

  else if (status == "R") {
     digitalWrite(LED2, LOW);
     colorWipe(strip.Color(255, 0, 0), 50);
     
  }
  
  else if (status == "RF") {
     digitalWrite(LED2, HIGH);
     colorWipe(strip.Color(0, 0, 0), 50); // Color negro con una velocidad de 50ms
  }

  else if (status == "G") {
     digitalWrite(LED3, LOW);
     colorWipe(strip.Color(0, 255, 0), 50);
  }

   else if (status == "GF") {
     digitalWrite(LED3, HIGH);
     colorWipe(strip.Color(0, 0, 0), 50); // Color negro con una velocidad de 50ms
  }

  else if (status == "M") {
    MIX_F();
    theaterChase(strip.Color(127, 127, 127), 50); // White, half brightness
  }

  else if (status == "ON") {
    LALL_F();
    colorWipe(strip.Color(255, 255, 255), 50);
  }
  
  else if (status == "OFF") {
    OFF_F();
   colorWipe(strip.Color(0, 0, 0), 50); // Color negro con una velocidad de 50ms
}
  }

